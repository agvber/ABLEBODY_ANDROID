plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.smilehunter.ablebody'
    compileSdk 34

    defaultConfig {
        applicationId "com.smilehunter.ablebody"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose = true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def compose_version = "2023.09.01"

    implementation platform("androidx.compose:compose-bom:$compose_version")
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.foundation:foundation'

    androidTestImplementation platform("androidx.compose:compose-bom:$compose_version")

    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}


dependencies {
    def room_version = "2.5.2"

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
//    implementation "androidx.room:room-paging:$room_version"
}

dependencies {
    def hilt_version = "2.48"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    ksp "com.google.dagger:hilt-compiler:$hilt_version"

    kspTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"

    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"

    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"
}

dependencies {
    implementation 'androidx.navigation:navigation-compose:2.7.3'
}

dependencies {
    def paging_version = "3.2.1"

    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:$paging_version"
}

dependencies {
    def retrofit_version = "2.9.0"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
}

dependencies {
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    implementation 'androidx.compose.runtime:runtime-livedata:1.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
}

dependencies {
    implementation 'io.coil-kt:coil-compose:2.4.0'
}

dependencies {
    def firebase_version = "32.3.1"
    // Import the Firebase BoM
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")


    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'


    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.9.10')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha06'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.testng:testng:7.8.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
}